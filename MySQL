1.丁奇心路
》》》学习过程中，建立感觉很重要。这个感觉是一种很奇妙的感受，她可以伴随你度过枯燥的时光。这种感觉来自心灵的触摸与寻找。感觉来自于积累，来自对底层原理的熟悉
来自于不断地尝试、试错、反复。

》》》在熟悉底层原理地过程中，不可避免需要计算机基础学科地知识铺垫。于我关键地是，在遇到挫折时，能知道在哪里有缺陷，我需要补充什么这才是最重要的。

》》》在早期过程中，尽量避免表面方便，这样会对整体的成长更有好处。比如mysql,多熟悉命令行操作，多谢sql，这样能更接近底层，更能懂底层操作的感觉

》》》早期学习时，中心点的概念很重要，尤其是面对不连续的环境下。越紧密越精确的既具备隔离性、独立性概念越能提升学习有效感，每片学习活动，保证这个概念的学习尽可能独立于其他概念，
这样减少不必要的学习成本损耗。


》》在基础可以后，遇到问题可以尝试看源码，目的是了解原理：更好定位问题、更巧妙解决问题、更多的解决思路
》》混社区，分享交流经验
》》Mysql的学习路径：先会用，懂每个参数的意义（不止于复制粘贴别人的代码）：不断去用——然后发现问题——去实践，查官方手册-组织一个脉络====》适用其他领域
》》好的习惯：缩写sql，多注意培养自己对sql执行效率的感觉。培养心里的对操作的大概概念
》》去教别人，倒逼自己进行更深入的学习




有效资源：
    纯粹数据库原理——》《事务处理概念与技术》Jim Gray
    简单实现引擎——》example引擎、federated引擎、SphinxSE引擎
    中间件实现语言
    《高性能Mysql》
    
    


2.

















1.mysql的有哪些部分？
两个层次：server层、存储引擎层
很明显也是符和远近原则。近的是直接操作底层的，也就是c层，负责数据的提取操作
远的是s层，更高层面的操作，包含：连接器、查询缓存、分析器、优化器、执行器
大概过程就是，连接器负责建立连接、权限验证这些事务；有查询缓存的话，去查找是否命中，有命中直接返回命中结果；然后就是分析器负责词法语法分析；优化器进行索引选择；执行器负责执行引擎，面向c层


2.两种日志
redo log日志：
    redo日志是innoDB引擎以插件的形式引入mysql中的。他负责记录底层数据页的具体操作
    他是循环记入，有空间限制，分别两个指针：write_pos  和 check_point,前者是写入指针，后者是擦除指针
  
bing日志：
    binlog日志是server层的日志，负责记录逻辑形式的操作
    
3.事务
    事务的概念
